<?php
/**
 * Admin dashboard widget wizard.
 *
 * @author Ondřej Doněk, <ondrejd@gmail.com>
 * @link https://github.com/ondrejd/odwp-devhelper for the canonical source repository
 * @license https://www.gnu.org/licenses/gpl-3.0.en.html GNU General Public License 3.0
 * @package odwp-devhelper
 * @since 0.0.1
 */

if( ! defined( 'ABSPATH' ) ) {
  exit;
}

/**
 * @var string $form_url
 */
$form_url = admin_url( 'edit.php?post_type=' . DevHelper_Wizard_CustomPostType::SLUG . '&page=' . $wizard->slug );

?><div class="wrap">
	<h1 class="wp-heading-inline"><?php _e( 'Wizards - Dashboard Widget', DH_SLUG )?></h1>
    <hr class="wp-header-end">
	<p class="description"><?php printf(
		__( 'Generate new %1$sdashboard%2$s widgets (using %3$sDashboard Widget API%4$s). Generated code contains new class with several static methods and follows %5$sofficial example%6$s. The last part is piece of code needed for activation.', DH_SLUG ),
		'<a href="https://codex.wordpress.org/Dashboard_SubPanel" target="blank">',
		'</a>',
		'<a href="https://codex.wordpress.org/Dashboard_Widgets_API" target="blank">',
		'</a>',
		'<a href="https://codex.wordpress.org/Example_Dashboard_Widget" target="blank">',
		'</a>'
	)?></p>
	<form id="wizard-dashboardwidget" action="<?php esc_attr_e( $form_url )?>" method="post">
		<table class="form-table">
            <tbody>
				<!-- Class name -->
				<tr>
					<th scope="row">
						<label for="odwpdh-classname"><?php _e( 'Class name', DH_SLUG ) ?></label>
					</th>
					<td>
						<fieldset>
							<p>
								<input type="text" name="classname" id="odwpdh-classname" class="regular-text" placeholder="<?php _e( 'My_Widget', DH_SLUG ) ?>">
							</p>
							<p class="description"><?php _e( 'Name of class which will contain implementation of the dashboard widget.', DH_SLUG ) ?></p>
						</fieldset>
					</td>
				</tr>
				<!-- Identifier (slug) -->
				<tr>
					<th scope="row">
						<label for="odwpdh-slug"><?php _e( 'Identifier', DH_SLUG ) ?></label>
					</th>
					<td>
						<fieldset>
							<p>
								<input type="text" name="slug" id="odwpdh-slug" class="regular-text" placeholder="<?php _e( 'Enter identifier of your plugin', DH_SLUG ) ?>">
							</p>
							<p class="description"><?php _e( '<b>Identifier</b> could be derrived from plugin\'s name and can NOT contains spaces, tabs and other control or special characters.', DH_SLUG ) ?></p>
						</fieldset>
					</td>
				</tr>
				<!-- Name -->
				<tr>
					<th scope="row">
						<label for="odwpdh-name"><?php _e( 'Name', DH_SLUG ) ?></label>
					</th>
					<td>
						<fieldset>
							<p>
								<label for="plugin-name"><?php _e( 'Name:', DH_SLUG ) ?></label><br>
								<textarea name="name" id="odwpdh-name" class="long-text" placeholder="<?php _e( 'Enter short description of your plugin', DH_SLUG ) ?>" cols="72" rows="5"></textarea>
							</p>
						</fieldset>
					</td>
				</tr>
                <!-- ... -->

				<!-- Advanced options -->
				<?php echo $wizard->render_advanced_options( $show_description, 'dashboardwidget', $wizard->template->get_values() ); ?>
            </tbody>
		</table>
        <!-- Submit buttons -->
        <?php echo $wizard->render_submit_buttons(); ?>
	</form>

	<hr>

	<p class="description"><?php _e( 'Below are generated files that are required to get working WordPress plugin with new dashboard widget. You can copy source codes to clipboard or download it as a ZIP package.<br>You can also test these source files before using them.', DH_SLUG ); ?></p>

	<!-- TODO Here should be rendered generated PHP source -->
	<h3><code><?php echo 'my-example-list/includes/class-my_example_dashboard_widget.php'; ?></code></h3>
	<pre><code class="language-php">&lt;?php
/**
 * Dashboard widget "Your Widget.
 *
 * @package your-package
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit();
}


// Set up your textdomain instead of this:
defined( 'TEXTDOMAIN' ) || defined( 'TEXTDOMAIN' );


if ( ! class_exists( 'Your_Dashboard_Widget' ) ) :

/**
 * Dashboard widget "Your Widget.
 * @since 1.0.0
 */
class Your_Dashboard_Widget {

    /**
     * @var Slug of the widget.
     */
    const SLUG = 'your-dashboard-widget';
    const OPTIONS = [
        // ...
    ];

    /**
     * Inits plugin.
     * @return void
     */
    public static function init() {
        self::update_options( self::OPTIONS, true );

        wp_add_dashboard_widget(
                self::SLUG,
                __( 'Your widget', TEXTDOMAIN ),
                array( 'Your_Dashboard_Widget', 'render' ),
                array( 'Your_Dashboard_Widget', 'render_config' )
        );
    }

    /**
     * @render void
     */
    public static function render() {
        ob_start( function() {} );
        include_once( 'templates/your-dashboard-widget.phtml' );
        $html = ob_get_flush();
        echo apply_filters( self::SLUG, $html );
    }

    /**
     * @render void
     */
    public static function render_config() {
        ob_start( function() {} );
        include_once( ODWPDP_PATH . '/templates/your-widget-config-1.phtml' );
        $html = ob_get_flush();
        echo apply_filters( self::SLUG, $html );
    }

    /**
     * @return mixed
     */
    public static function get_options() {
        $opts = get_option( 'dashboard_widget_options' );

        if ( array_key_exists( self::SLUG, $opts ) ) {
            return $opts[self::SLUG];
        }

        return false;
    }

    /**
     * @param string $key
     * @param boolean $default (Optional.)
     * @return mixed
     */
    public static function get_option( $key, $default = false ) {
        $opts = self::get_options();
        $ret = ( array_key_exists( $key, self::OPTIONS ) && $default === true )
                ? self::OPTIONS[$key]
                : false;

        if ( $opts === false || ! array_key_exists( $key, $opts ) ) {
            return $ret;
        }

        return $opts[$key];
    }

    /**
     * @param array $options
     * @param boolean $add_only (Optional.)
     * @return boolean
     */
    public static function update_options( $options, $add_only = false ) {
        $opts = get_option( 'dashboard_widget_options' );
        $w_opts = array_key_exists( self::SLUG, $opts ) ? $opts[self::SLUG] : array();

        if ( $add_only ) {
            $opts[self::SLUG] = array_merge( $options, $w_opts );
        } else {
            $opts[self::SLUG] = array_merge( $w_opts, $options );
        }

        return update_option( 'dashboard_widget_options', $opts );
    }
}

endif;

add_action( 'wp_dashboard_setup', array( 'Your_Dashboard_Widget', 'init' ) );

</code></pre>
</div>