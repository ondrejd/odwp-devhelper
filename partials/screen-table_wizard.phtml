<?php
/**
 * Table listing wizard.
 *
 * @author Ondřej Doněk, <ondrejd@gmail.com>
 * @link https://github.com/ondrejd/odwp-devhelper for the canonical source repository
 * @license https://www.gnu.org/licenses/gpl-3.0.en.html GNU General Public License 3.0
 * @package odwp-devhelper
 * @since 0.0.1
 */

if( ! defined( 'ABSPATH' ) ) {
  exit;
}

?><div class="wrap">
	<h1><?php _e( 'Wizards - Table listing', DH_SLUG )?></h1>
    <hr class="wp-header-end">

	<p class="description"><?php printf(
		__( 'Generator for table list classes using <code><a href="%1$s" target="blank">WP_List_Table</a></code>.', DH_SLUG ),
		'https://developer.wordpress.org/reference/classes/wp_list_table/'
	); ?></p>

	<form id="list_table-wizard">
		<table class="form-table">
			<tbody>
				<!-- Class name -->
				<tr>
					<th scope="row">
						<label for="plugin-classname"><?php _e( 'Class name', DH_SLUG ) ?></label>
					</th>
					<td>
						<input type="text" name="classname" id="plugin-classname" class="regular-text" placeholder="<?php _e( 'My_Example_List', DH_SLUG ) ?>">
						<?php if ( $show_description === true ): ?>
						<p id="classname_description" class="description"><?php _e( 'Name of the PHP class that will be generated, e.g. \'My_Example_List\'.', DH_SLUG )?></p>
						<?php endif;?>
					</td>
				</tr>
				<!-- WP_List_Table Arguments -->
				<tr>
					<th scope="row">
						<label for="plugin-arguments"><?php _e( 'Arguments', DH_SLUG )?></label>
					</th>
					<td>
						<p class="description"><?php _e( 'Arguments for <a href="https://developer.wordpress.org/reference/classes/wp_list_table/__construct/" target="blank">constructor</a> of <code>WP_List_Table</code> class.', DH_SLUG )?></p>
						<fieldset>
							<label for="plugin-set_plural">
								<input type="checkbox" name="plugin-set_plural" id="plugin-set_plural">
								<?php _e( 'Plural label:', DH_SLUG )?>
								<input type="text" name="plural" id="plugin-plural" placeholder="<?php _e( 'examples', DH_SLUG ) ?>" disabled="disabled">
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="set_plural_description" class="description"><?php _e( 'Plural value used for labels and the objects being listed. This affects things such as CSS class-names and nonces used in the list table, e.g. \'posts\'. Default empty.', DH_SLUG )?></p>
							<?php endif;?>
							<label for="plugin-set_singular">
								<input type="checkbox" name="plugin-set_singular" id="plugin-set_singular">
								<?php _e( 'Singular label:', DH_SLUG )?>
								<input type="text" name="singular" id="plugin-singular" placeholder="<?php _e( 'example', DH_SLUG )?>" disabled="disabled">
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="set_singular_description" class="description"><?php _e( 'Singular label for an object being listed, e.g. \'post\'. Default empty.', DH_SLUG )?></p>
							<?php endif;?>
							<label for="plugin-use_ajax">
								<input type="checkbox" name="use_ajax" id="plugin-use_ajax">
								Use AJAX?
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="use_ajax_description" class="description">
								<?php _e( 'Whether the list table supports AJAX. This includes loading and sorting data, for example. If true, the class will call the <code><a href="https://developer.wordpress.org/reference/classes/wp_list_table/_js_vars/" target="blank">_js_vars()</a></code> method  in the footer to provide variables to any scripts handling AJAX events. Default false.', DH_SLUG )?>
							<?php endif;?>
							</p>
							<label for="plugin-set_screen">
								<input type="checkbox" name="plugin-set_screen" id="plugin-set_screen">
								<?php _e( 'Screen:', DH_SLUG )?>
								<input type="text" name="screen" id="plugin-screen" placeholder="<?php _e( 'example', DH_SLUG )?>" disabled="disabled">
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="set_screen_description" class="description"><?php _e( 'String containing the hook name used to determine the current screen. If left null, the current screen will be automatically set. Default null.', DH_SLUG )?></p>
							<?php endif;?>
						</fieldset>
					</td>
				</tr>
				<!-- Other options -->
				<tr>
					<th scope="row">
						<label for="plugin-options"><?php _e( 'Options', DH_SLUG )?></label>
					</th>
					<td>
						<fieldset id="plugin-options">
							<label for="plugin-searchbox">
								<input type="checkbox" name="searchbox" id="plugin-searchbox">
								<?php _e( 'Add search box?', DH_SLUG )?>
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="searchbox_description" class="description">
								<?php _e( '<code>XXX</code> Add detail description (with screenshot)!', DH_SLUG )?></p>
							<?php endif;?>

							<label for="plugin-custom_filter">
								<input type="checkbox" name="custom_filter" id="plugin-custom_filter">
								<?php _e( 'Add custom filter?', DH_SLUG )?>
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="custom_filter_description" class="description">
								<?php _e( '<code>XXX</code> Add detail description (with screenshot)!', DH_SLUG )?></p>
							<?php endif;?>
						</fieldset>
					</td>
				</tr>
				<!-- Views -->
				<tr>
					<th scope="row">
						<label for="plugin-use_views"><?php _e( 'Views', DH_SLUG )?></label>
					</th>
					<td>
						<fieldset>
							<label for="plugin-use_views">
								<input type="checkbox" name="plugin-use_views" id="plugin-use_views">
								<?php _e( 'Use custom views?', DH_SLUG )?>
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="use_views_description" class="description">
								<?php _e( 'Views are used as a main data filtres - commonly there are views <b>All</b> and <b>Deleted</b> which means one view with all not-deleted items and other with deleted items (trash).', DH_SLUG ) ?></p>
							<?php endif;?>
							<div id="use_views_area" class="wp-pattern-example">
								<p><b><?php _e( 'Specify all views:', DH_SLUG )?></b></p>
								<div><!--  class="hide-if-no-js" -->
									<p>
										<label for="add_view_label">
											<?php _e( 'Label', DH_SLUG )?>
											<input id="add_view_label" name="add_view_label" class="form-input-tip" aria-describedby="add_view_desc" type="text" value="" size="25" style="width: 125px;">
										</label>
										<label for="add_view_key">
											<?php _e( 'Key', DH_SLUG )?>
											<input id="add_view_key" name="add_view_key" class="form-input-tip" aria-describedby="add_view_desc" type="text" value="" size="25" style="width: 125px;">
										</label>
										<input class="button tagadd" type="button" value="<?php _e( 'Add', DH_SLUG )?>">
									</p>
								</div>
								<p id="add_view_desc" class="description"<?php echo ( $show_description !== true ) ? ' style="display: none; visibility: hidden;"' : ''; ?>><?php _e( 'Both values label and key are required. Key should not contain any spaces or special letters. The max. length of both strings is twenty-five letters.', DH_SLUG )?></p>
								<div class="tagchecklist">
									<span>
										<a id="view_check-0" class="ntdelbutton"></a>
										<b><?php _e( 'All', DH_SLUG )?></b> (<i><?php esc_html_e( 'all', DH_SLUG )?></i>)
									</span>
									<span>
										<a id="view_check-1" class="ntdelbutton"></a>
										<b><?php _e( 'Trash', DH_SLUG )?></b> (<i><?php esc_html_e( 'trash', DH_SLUG )?></i>)
									</span>
								</div>
							</div>
						</fieldset>
					</td>
				</tr>
				<!-- Bulk actions -->
				<tr>
					<th scope="row">
						<label for="plugin-use_bulkactions"><?php _e( 'Bulk actions', DH_SLUG ) ?></label>
					</th>
					<td>
						<fieldset>
							<label for="plugin-use_bulkactions">
								<input type="checkbox" name="plugin-use_bulkactions" id="plugin-use_bulkactions">
								Use bulk actions?
							</label>
							<?php if ( $show_description === true ): ?>
							<p id="use_bulkactions_description" class="description">
								<?php _e( 'Bulk actions are pre-defined operations over selected items in the table. Are used for setting values for multiple items. Commonly is one of actions <b>Trash</b>.', DH_SLUG ) ?></p>
							<?php endif;?>
							<div id="use_bulkactions_area" class="wp-pattern-example">
								<p><b><?php _e( 'Specify bulk actions:', DH_SLUG )?></b></p>
								<div><!--  class="hide-if-no-js" -->
									<p>
										<label for="add_bulkaction_label">
											<?php _e( 'Label', DH_SLUG )?>
											<input id="add_bulkaction_label" name="add_bulkaction_label" class="form-input-tip" aria-describedby="add_bulkaction_desc" type="text" value="" size="25" style="width: 125px;">
										</label>
										<label for="add_bulkaction_key">
											<?php _e( 'Key', DH_SLUG )?>
											<input id="add_bulkaction_key" name="add_bulkaction_key" class="form-input-tip" aria-describedby="add_bulkaction_desc" type="text" value="" size="25" style="width: 125px;">
										</label>
										<input class="button tagadd" type="button" value="<?php _e( 'Add', DH_SLUG )?>">
									</p>
								</div>
								<p id="add_bulkaction_desc" class="description"<?php echo ( $show_description !== true ) ? ' style="display: none; visibility: hidden;"' : ''; ?>><?php _e( 'Both values label and key are required. Key should not contain any spaces or special letters. The max. length of both strings is twenty-five letters.', DH_SLUG )?></p>
								<div class="tagchecklist">
									<span>
										<a id="bulkaction_check-1" class="ntdelbutton"></a>
										<b><?php _e( 'Trash', DH_SLUG )?></b> (<i><?php esc_html_e( 'trash', DH_SLUG )?></i>)
									</span>
								</div>
							</div>
						</fieldset>
					</td>
				</tr>
				<!-- Data source -->
				<tr>
					<th scope="row">
						<label for="plugin-ds_php_source"><?php _e( 'Data source', DH_SLUG )?></label>
					</th>
					<td>
						<fieldset id="plugin-ds_fieldset">
							<legend class="screen-reader-text">
								<span><?php _e( 'Data source', DH_SLUG )?></span>
							</legend>
							<!-- Data source: PHP source -->
							<label for="plugin-ds_php_source">
								<input type="radio" name="plugin-datasource" id="plugin-ds_php_source">
								<?php _e( 'PHP source', DH_SLUG )?>
							</label>
							<div id="ds_php_source-area" class="inner_checkbox_area">
								<p class="description"><?php _e( 'You can either import CSV file or paste your data array into the textarea.', DH_SLUG );?></p>
								<fieldset>
									<legend class="screen-reader-text">
										<span><?php _e( 'Specify PHP data source', DH_SLUG )?></span>
									</legend>
									<label for="ds_php_source-import">
										<input type="radio" name="ds_php_source-choice" id="ds_php_source-import">
										<?php _e( 'Import file', DH_SLUG )?>
									</label>
									<input type="button" id="ds_php_source-import_csv" class="button" value="<?php _e( 'Upload CSV file', DH_SLUG )?>" disabled="disabled">
									<input type="button" id="ds_php_source-import_php" class="button" value="<?php _e( 'Upload PHP file', DH_SLUG )?>" disabled="disabled"><br>
									<label for="ds_php_source-array">
										<input type="radio" name="ds_php_source-choice" id="ds_php_source-array">
										<?php _e( 'Enter source', DH_SLUG )?>
									</label>
									<div class="inner_checkbox_area">
										<p class="description"><?php _e( 'Enter valid PHP file that returns array with data.', DH_SLUG )?></p>
										<textarea name="ds_php_source-data" id="ds_php_source-textarea" cols="80" rows="10" disabled="disabled">
&lt;?php
return array(
	array( 'id' => 1, 'name' => 'Test 01', 'finished' => 0 ),
	array( 'id' => 2, 'name' => 'Test 02', 'finished' => 1 ),
	array( 'id' => 3, 'name' => 'Test 03', 'finished' => 0 ),
	array( 'id' => 4, 'name' => 'Test 04', 'finished' => 0 ),
);
										</textarea>
										<p>
											<input type="button" id="ds_php_source-array_parse" class="button" value="<?php _e( 'Parse columns', DH_SLUG )?>" disabled="disabled">
										</p>
									</div>
								</fieldset>
							</div>
							<!-- Data source: WordPress data -->
							<label for="plugin-ds_wp_data">
								<input type="radio" name="plugin-datasource" id="plugin-ds_wp_data">
								<?php _e( 'Query for WordPress data', DH_SLUG )?>
							</label>
							<div id="ds_wp_data-area" class="inner_checkbox_area">
								<p class="description"><?php _e( 'Select which data you need.', DH_SLUG );?></p>
								<fieldset>
									<legend class="screen-reader-text">
										<span><?php _e( 'Specify required WordPress data', DH_SLUG )?></span>
									</legend>
									<label for="ds_wp_data-radio1">
										<input type="radio" name="ds_wp_data-radio" value="posts" id="ds_wp_data-radio1">
										<?php _e( 'Posts', DH_SLUG )?>
									</label><br>
									<label for="ds_wp_data-radio2">
										<input type="radio" name="ds_wp_data-radio" value="radio" id="ds_wp_data-radio2">
										<?php _e( 'Media', DH_SLUG )?>
									</label><br>
									<label for="ds_wp_data-radio3">
										<input type="radio" name="ds_wp_data-radio" value="comments" id="ds_wp_data-radio3">
										<?php _e( 'Comments', DH_SLUG )?>
									</label><br>
									<label for="ds_wp_data-radio4">
										<input type="radio" name="ds_wp_data-radio" value="users" id="ds_wp_data-radio4">
										<?php _e( 'Users', DH_SLUG )?>
									</label><br>
									<label for="ds_wp_data-radio5">
										<input type="radio" name="ds_wp_data-radio" value="custom" id="ds_wp_data-radio5" disabled="disabled">
										<?php _e( 'Custom', DH_SLUG )?>
									</label>
								</fieldset>
							</div>
							<!-- Data source: Own database table -->
							<label for="plugin-ds_db_table">
								<input type="radio" name="plugin-datasource" id="plugin-ds_db_table">
								<?php _e( 'Own database table', DH_SLUG )?>
							</label>
							<div id="ds_db_table-area" class="inner_checkbox_area">
								<p class="description"><?php _e( 'Place here your SQL query for new database table.', DH_SLUG );?></p>
								<fieldset>
									<legend class="screen-reader-text">
										<span><?php _e( 'Specify SQL query', DH_SLUG )?></span>
									</legend>
									<textarea name="ds_db_table-sql" id="ds_db_table-textarea" cols="80" rows="10" disabled="disabled"></textarea>
								</fieldset>
							</div>
							<!-- Data source: External -->
							<label for="plugin-ds_ext_uri">
								<input type="radio" name="plugin-datasource" id="plugin-ds_ext_uri" disabled="disabled">
								<?php _e( 'External data source', DH_SLUG )?>
							</label>
						</fieldset>
					</td>
				</tr>
				<!-- Columns -->
				<tr>
					<th scope="row">
						<label for="plugin-columns"><?php _e( 'Columns', DH_SLUG ) ?></label>
					</th>
					<td>
						<fieldset>
							<div id="columns_area" class="wp-pattern-example">
								<p class="description"><?php esc_html_e( 'Enter as many columns you want. Both `key` and `label` fields are required.', DH_SLUG )?></p>
								<table class="table" style="width: 100%;">
									<thead>
										<tr>
											<th style="width: 35%;"><?php esc_html_e( 'Key', DH_SLUG )?></th>
											<th style="width: 35%;"><?php esc_html_e( 'Label', DH_SLUG )?></th>
											<th style="width: 10%;"><?php esc_html_e( 'Sort.', DH_SLUG )?></th>
											<th style="width: 20%;"> </th>
										</tr>
									</thead>
									<tbody>
										<!-- TODO Render existing actions here! -->
										<tr>
											<td><input type="text" value="<?php esc_html_e( 'id', DH_SLUG )?>" disabled="disabled"></td>
											<td><input type="text" value="<?php _e( 'ID', DH_SLUG )?>" disabled="disabled"></td>
											<td><input type="checkbox" title="<?php _e( 'Make it sortable?', DH_SLUG )?>" checked="checked" disabled="disabled"></td>
											<td><span title="<?php _e( 'Remove column', DH_SLUG )?>"><span class="wp-ui-text-notification dashicons dashicons-trash"></span></span></td>
										</tr>
										<tr>
											<td><input type="text" value="<?php esc_html_e( 'name', DH_SLUG )?>" disabled="disabled"></td>
											<td><input type="text" value="<?php _e( 'Name', DH_SLUG )?>" disabled="disabled"></td>
											<td><input type="checkbox" title="<?php _e( 'Make it sortable?', DH_SLUG )?>" checked="checked" disabled="disabled"></td>
											<td><span title="<?php _e( 'Remove column', DH_SLUG )?>"><span class="wp-ui-text-notification dashicons dashicons-trash"></span></span></td>
										</tr>
										<tr>
											<td><input type="text" value="<?php esc_html_e( 'created', DH_SLUG )?>" disabled="disabled"></td>
											<td><input type="text" value="<?php _e( 'Created', DH_SLUG )?>" disabled="disabled"></td>
											<td><input type="checkbox" title="<?php _e( 'Make it sortable?', DH_SLUG )?>" checked="checked" disabled="disabled"></td>
											<td><span title="<?php _e( 'Remove column', DH_SLUG )?>"><span class="wp-ui-text-notification dashicons dashicons-trash"></span></span></td>
										</tr>
									</tbody>
									<tfoot>
										<tr>
											<td style="width: 35%;">
												<input type="text" name="plugin-new_columns_key" id="plugin-new_columns_key" class="regular-text" placeholder="<?php _e( 'Enter key', DH_SLUG ) ?>" style="width: 100%;">
											</td>
											<td style="width: 35%;">
												<input type="text" name="plugin-new_columns_label" id="plugin-new_columns_label" class="regular-text" placeholder="<?php _e( 'Enter label', DH_SLUG ) ?>" style="width: 100%;">
											</td>
											<td style="width: 10%;"><input type="checkbox" title="<?php _e( 'Make it sortable?', DH_SLUG )?>" checked="checked"></td>
											<td style="width: 20%;"><span title="<?php _e( 'Add column', DH_SLUG )?>"><span class="wp-ui-text-highlight dashicons dashicons-plus"></span></span> / <span title="<?php _e( 'Clear values', DH_SLUG )?>"><span class="wp-ui-text-notification dashicons dashicons-trash"></span></span></td>
										</tr>
									</tfoot>
								</table>
							</div>
						</fieldset>
					</td>
				</tr>
				<!-- Advanced options -->
				<?php echo $wizard->render_advanced_options( $show_description, 'table', $wizard->template->get_values() ); ?>
			</tbody>
		</table>
		<!-- Submit buttons -->
		<?php echo $wizard->render_submit_buttons(); ?>
	</form>

	<hr>

	<p class="description"><?php _e( 'Below are generated files that are required to get working WordPress plugin. You can copy source codes to clipboard or download it as a ZIP package.<br>You can also test these source files before using them.', DH_SLUG )?></p>

	<!-- TODO Here should be rendered generated PHP source -->
	<h3><code><?php echo 'my-example-list/includes/class-my_example_list.php.php'; ?></code></h3>
	<pre><code class="language-php">&lt;?php
/**
 * File description ...
 *
 * @package my-example-list
 * @since 1.0
 */

if ( ! class_exists( 'My_Example_List' ) ):

/**
 * Class description ...
 *
 * @see WP_List_Table
 * @since 1.0
 */
class My_Example_List extends WP_List_Table {
	/**
	 * Constructor.
	 */
	public function __construct() {
		parent::__construct( array(
			'plural' => __( 'examples', 'my_textdomain' ),
			'singular' => __( 'example', 'my_textdomain' ),
			'use_ajax' => false,
			'screen' => '',
		) );
	}
}

endif;

</code></pre>

	<h3><code><?php echo 'my-example-list/my-example-list.php'; ?></code></h3>
	<pre><code class="language-php">&lt;?php
/**
 * Plugin Name: My Example List
 * Description: Example plugin with generated table list.
 * Version: 1.0
 * Author: Ondřej Doněk
 * Author URI: http://ondrejdonek.blogspot.cz/
 * Requires at least: 4.3
 * Tested up to: 4.5
 *
 * Text Domain: my-example-list
 * Domain Path: /languages/
 *
 * @package my-example-list
 */

if ( ! function_exists( 'render_my_example_list' ) ):

/**
 * Render `My_Example_List`.
 * @since 1.0
 */
function render_my_example_list() {
	// This will work if function is placed in file located directly
	// in plugin's root folder.
	require_once plugin_dir_path( __FILE__ ) . 'includes/class-my_example_list.php';

	/**
	 * @var My_Example_List $my_example_list
	 */
	$my_example_list = new My_Example_List();
?&gt;
&lt;div class="wrap"&gt;
	&lt;h1&gt;&lt;?php _e( 'My_Example_List', 'my_textdomain' ); ?&gt;&lt;/h1&gt;
	&lt;form method="post"&gt;
	&lt;?php
		$my_example_list-&gt;prepare_items();
		$my_example_list-&gt;views();
		$my_example_list-&gt;display();
	?&gt;
	&lt;/form&gt;
&lt;div&gt;
&lt;?php
}

endif;


if ( ! function_exists( 'my_plugin_admin_menu' ) ):

/**
 * Add new page to the administration menu.
 * @since 1.0
 */
function my_plugin_admin_menu() {
	$hook = add_menu_page(
		__( 'My example list', 'textdomain' ),
		__( 'Example list', 'textdomain' ),
		'manage_options',
		'my_example_list-main_page',
		'render_my_example_list',
		''
	);
}

endif;


if ( ! function_exists( 'my_plugin_init' ) ):

/**
 * Initialize our plugin.
 * @since 1.0
 */
function my_plugin_init() {
	if ( is_admin() ) {
		add_action( 'admin_menu', 'my_plugin_admin_menu' );
	}
}

endif;


// Initialize plugin
add_action( 'plugins_loaded', 'my_plugin_init' );

</code></pre>

	<h3><code><?php echo 'my-example-list/README.txt'; ?></code></h3>
	<pre><code class="language-markdown">
=== My Example List ===
Contributors: ondrejd
Donate link:
Tags: plugin, table list
Requires at least: 4.2
Tested up to: 4.5
Stable tag: 1.0
License: Mozilla Public License 2.0
License URI: https://www.mozilla.org/MPL/2.0/

My example list plugin.

== Description ==

My example list plugin.

== Installation ==

This section describes how to install the plugin and get it working.

e.g.

1. Upload `my-example-list` to the `/wp-content/plugins/` directory
2. Activate the plugin through the 'Plugins' menu in WordPress

== Frequently Asked Questions ==

= A question that someone might have =

An answer to that question.

= What about foo bar? =

Answer to foo bar dilemma.

== Screenshots ==

1. This screen shot description corresponds to screenshot-1.(png|jpg|jpeg|gif). Note that the screenshot is taken from
the /assets directory or the directory that contains the stable readme.txt (tags or trunk). Screenshots in the /assets
directory take precedence. For example, `/assets/screenshot-1.png` would win over `/tags/4.3/screenshot-1.png`
(or jpg, jpeg, gif).
2. This is the second screen shot

== Changelog ==

= 0.0.1 =
* Initial version.

== Upgrade Notice ==

= 1.0 =
Upgrade notices describe the reason a user should upgrade.  No more than 300 characters.

== Arbitrary section ==

You may provide arbitrary sections, in the same format as the ones above.  This may be of use for extremely complicated
plugins where more information needs to be conveyed that doesn't fit into the categories of "description" or
"installation."  Arbitrary sections will be shown below the built-in sections outlined above.

== A brief Markdown Example ==

Ordered list:

1. Some feature
1. Another feature
1. Something else about the plugin

Unordered list:

* something
* something else
* third thing

Here's a link to [WordPress](http://wordpress.org/ "Your favorite software") and one to [Markdown's Syntax Documentation][markdown syntax].
Titles are optional, naturally.

[markdown syntax]: http://daringfireball.net/projects/markdown/syntax
            "Markdown is what the parser uses to process much of the readme file"

Markdown uses email style notation for blockquotes and I've been told:
> Asterisks for *emphasis*. Double it up  for **strong**.
</code></pre>

</div><!-- .wrap -->
